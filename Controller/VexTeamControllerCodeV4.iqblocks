{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"+hL!4vU1%OyF1hKmb/_a\">direction</variable><variable id=\"LV1Aoq!a[eCL093cXBJz\">time_band</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_sounds_play_sound\" id=\"vfsN8q.pw[Jq@YbxX#Vk\"><field name=\"SOUND\">tada</field><next><block type=\"iq_looks_set_width\" id=\"~8$?d-$FH0Fyz;bH7EbM\"><value name=\"WIDTH\"><shadow type=\"math_whole_number\" id=\"ZW:?M_4ZkaEN{#J_Yb}1\"><field name=\"NUM\">12</field></shadow></value><next><block type=\"iq_looks_set_pen_color\" id=\",mE|lsVxHC0tP*H^C/8E\"><field name=\"COLOR\">purple</field><field name=\"TARGET\">Brain</field><next><block type=\"iq_looks_print_new\" id=\"p]wFQmZk[*#kz[mR(w%Q\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"]Rj{#UKB/??ryw%!a-9;\"><field name=\"TEXT\">Mechanus Optimus</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"t5F`B[iyMYd7H1N[GB(Z\"><field name=\"VARIABLE\" id=\"LV1Aoq!a[eCL093cXBJz\">time_band</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"xQQACu[.=P{!luCx4N+v\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"@?Pgq;XI-uIl.xmMcH-}\"><field name=\"MOTOR\">Pickup</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"5X9FWi40pv}udX(au[rF\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"_wL[f$9f|v3y7;3|]TGj\"><field name=\"MOTOR\">Pickup</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"cnnLF-(||l_@MerBi^Xl\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"q_HJf]oWj#IjMX5ig^%K\"><field name=\"MOTOR\">Lift</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"t2Q^R9E;WW9GQ]7`[D@}\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"pDO6FD@;keSM?1ra/=U4\"><field name=\"MOTOR\">Lift</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\".6)Qk1U5,uPurE|UMoJM\"><field name=\"NUM\">75</field></shadow></value><next><block type=\"iq_motion_set_motor_stopping\" id=\"cVGS_Ji]A*f7GF91O8nT\"><field name=\"MOTOR\">Lift</field><field name=\"MODE\">hold</field><next><block type=\"iq_variables_set_variable\" id=\"RaVtmh6}@edg1r^OTtkK\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"%EC!)2hV.m/U:Cs,*9ho\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_control_forever\" id=\"TMFzZ31AaDX(y(i*X:R/\"><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then\" id=\"t}^26~{M1l9`!@Fm)5Xx\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_controller\" id=\"z?8{G#TGj*2|Yk-A,bO!\"><field name=\"BUTTON\">ButtonLUp</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_wait_until\" id=\"5UmQG7)x7I}nn!f5=clY\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"zdL$pV{B!S8T(A%C/m|4\"><value name=\"OPERAND\"><block type=\"iq_sensing_pressing_controller\" id=\"#R|U6P-PdV9J@Yy9,y97\"><field name=\"BUTTON\">ButtonLUp</field></block></value></block></value><next><block type=\"iq_control_if_then_else\" id=\"l108zA2%#Q-?uGZm0|3}\"><value name=\"CONDITION\"><block type=\"iq_operator_or\" id=\"@iaJdJ;4w36zOj=N[B+L\"><value name=\"OPERAND1\"><block type=\"iq_operator_equal_to\" id=\")yMWJKNnRD8IV`Jw:,!]\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"g^#mRdetSC`x~A=g:z+u\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"CC5]|#ZAQ*BwpqRI!pB%\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"N,jdXN:ZH^79OoVxbRzS\"><field name=\"NUM\">-1</field></shadow></value></block></value><value name=\"OPERAND2\"><block type=\"iq_operator_equal_to\" id=\"lpMl{pJd(*f^vw)vHz{u\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"BvY%HD4MI^{s=_HP~SFt\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"bzg5;NwWFl.:EvSsO{JU\"><field name=\"NUM\">1</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_variable\" id=\"68]0D5;anAhqJupmf{-.\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"=F43H(M*-urN8BKtC@0r\"><field name=\"NUM\">0</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_variables_set_variable\" id=\"sNl#BGrkCBv/,SkjM1}/\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"iGT?V(HowkKr~,#,lEs+\"><field name=\"NUM\">1</field></shadow></value></block></statement></block></next></block></statement><next><block type=\"iq_control_if_then\" id=\"vTqo~[^]wB2G}*S%SIq2\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_controller\" id=\".^bva8ryN1@a(f{Fr;ol\"><field name=\"BUTTON\">ButtonLDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_wait_until\" id=\"$;rHVmrC,~UOP{dL(UYI\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"PAYV9M44|OhYEL%mQ2U{\"><value name=\"OPERAND\"><block type=\"iq_sensing_pressing_controller\" id=\"MxZ%^+BEnA01@vp5e/Mu\"><field name=\"BUTTON\">ButtonLDown</field></block></value></block></value><next><block type=\"iq_control_if_then_else\" id=\"7oxZ{b2*y+-ns/vqP7;x\"><value name=\"CONDITION\"><block type=\"iq_operator_or\" id=\"mDDT^dni_PcfZ?{:[BPE\"><value name=\"OPERAND1\"><block type=\"iq_operator_equal_to\" id=\"WJQi[1MN{FvO:qo%XGcE\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"ivGrws(05cwd5dqf9C?1\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"}VtdXa=LR?cH8Zd*nnkA\"><field name=\"NUM\">-1</field></shadow></value></block></value><value name=\"OPERAND2\"><block type=\"iq_operator_equal_to\" id=\"NCoq%(iant*)!/!I/T*}\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"kv9ogREgZ%4%o:,K;Rc;\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"2zeVZC#X+$xVp=d]JKVZ\"><field name=\"NUM\">1</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_variable\" id=\"j}:(N~HsA%?S~Vu/JL=J\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"!KRD3ciyJ-_BFUv9GF+_\"><field name=\"NUM\">0</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_variables_set_variable\" id=\"DjXZ*C)JIq53[d[19PvC\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"oZv!bxm~z3/s}YB9WNHl\"><field name=\"NUM\">-1</field></shadow></value></block></statement></block></next></block></statement><next><block type=\"iq_control_if_elseif_else\" id=\"U@BDQt?Pj]^C7PS^#}D4\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" branches=\"2\"></mutation><value name=\"CONDITION1\"><block type=\"iq_operator_greater_than\" id=\"S407C5VeZrqgkc.2Vk=!\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"Fi_HYV}os[J@0h_S?3d$\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"B$B{VhhRg$#l^74}pc{;\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"xAtK8C+WMNYVE-wLlwDr\"><field name=\"NUM\">0.9</field></shadow></value></block></value><statement name=\"SUBSTACK1\"><block type=\"iq_motion_spin\" id=\"=+^2w`qSL[S-c+eD,(Jg\"><field name=\"MOTOR\">Pickup</field><field name=\"DIRECTION\">fwd</field></block></statement><value name=\"CONDITION2\"><block type=\"iq_operator_less_than\" id=\"/TPJrhpopyfQ!s;VQDd6\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"]y}s?kBP)I5)Z#_1.x-o\"><field name=\"NUM\">0</field></shadow><block type=\"iq_variables_variable\" id=\"Ha])4ve6;DKfCvsc8mi.\"><field name=\"VARIABLE\" id=\"+hL!4vU1%OyF1hKmb/_a\">direction</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"adPk:nhNyqbZIpEuQ@Pz\"><field name=\"NUM\">-0.9</field></shadow></value></block></value><statement name=\"SUBSTACK2\"><block type=\"iq_motion_spin\" id=\"8A}@5vytOC!ntYedjS*L\"><field name=\"MOTOR\">Pickup</field><field name=\"DIRECTION\">rev</field></block></statement><statement name=\"SUBSTACK_ELSE\"><block type=\"iq_motion_stop_motor\" id=\"PTbYa4K)FskkQe6d|3W{\"><field name=\"MOTOR\">Pickup</field></block></statement><next><block type=\"iq_control_if_then\" id=\"}:,MIUFQufc;)Ga06M#5\"><value name=\"CONDITION\"><block type=\"iq_operator_and\" id=\"=fIqLB_dS[=NJ3N#qZ(:\"><value name=\"OPERAND1\"><block type=\"iq_sensing_pressing_controller\" id=\"XAF(5r8q=|]?iCwuhe-4\"><field name=\"BUTTON\">ButtonRUp</field></block></value><value name=\"OPERAND2\"><block type=\"iq_sensing_pressing_bumper\" id=\"5%+u|=T4xwNCp%kLn_Ae\"><field name=\"BUMPER\">LiftBottom</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_stop_motor\" id=\"y_W)!@O,yB4yw[!*DcXO\"><field name=\"MOTOR\">Lift</field></block></statement><next><block type=\"iq_control_if_then\" id=\"da%UDhcO4F9TAwbb$2l~\"><value name=\"CONDITION\"><block type=\"iq_operator_or\" id=\"_63]hM)IHd#6XA?LQ$Ez\"><value name=\"OPERAND1\"><block type=\"iq_sensing_pressing_controller\" id=\"1_S@R|$x(*Sln!zCc;%`\"><field name=\"BUTTON\">ButtonRDown</field></block></value><value name=\"OPERAND2\"><block type=\"iq_sensing_pressing_controller\" id=\"d^pT|b:[PtgNJ:qAG$ld\"><field name=\"BUTTON\">ButtonRUp</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_sensing_reset_timer\" id=\",8A)TWIo|HG|3X)v_5O1\"></block></statement><next><block type=\"iq_control_if_then\" id=\"6uixne61L`CdDy^Dj]px\"><value name=\"CONDITION\"><block type=\"iq_operator_greater_than\" id=\".HiAq=.oB4tKNP5}L#0-\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"67d-LV(Xdoo#hJIpWGpw\"><field name=\"NUM\">0</field></shadow><block type=\"iq_sensing_timer_value\" id=\"[-}n4)d0^VF#w9Abg3W2\"></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"LTL:uZe;odzvmjFyp!n`\"><field name=\"NUM\">50</field></shadow><block type=\"iq_variables_variable\" id=\"YPsIk-JrVBD2jS$)u!-N\"><field name=\"VARIABLE\" id=\"LV1Aoq!a[eCL093cXBJz\">time_band</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_repeat_until\" id=\"G-9g)Ob@T~eIZ:l(~)MT\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_bumper\" id=\"4%LJdnco+}(E+WBMC0=J\"><field name=\"BUMPER\">LiftBottom</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_spin_for\" id=\"uvIq}FvSqqC+X`T9ArCJ\"><field name=\"MOTOR\">Lift</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"#r@d~+.-oyp}}L0wuSq9\"><field name=\"NUM\">30</field></shadow></value></block></statement></block></statement></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,6,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"250mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[3],"name":"Pickup","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"Lift","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"Lift","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22},{"port":[12],"name":"LiftBottom","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.1","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 250, 173, 76, mm, 1);\nmotor Pickup = motor(PORT3, false);\nmotor Lift = motor(PORT4, false);\ncontroller Controller = controller();\nbumper LiftBottom = bumper(PORT12);\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonRUp/ButtonRDown status to control Lift\n      if (Controller.ButtonRUp.pressing()) {\n        Lift.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        Lift.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        Lift.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, direction, time_band;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.playSound(tada);\n  Brain.Screen.setPenWidth(12);\n  Brain.Screen.setPenColor(purple);\n  Brain.Screen.print(\"Mechanus Optimus\");\n  time_band = 5.0;\n  Pickup.setMaxTorque(100.0, percent);\n  Pickup.setVelocity(100.0, percent);\n  Lift.setMaxTorque(100.0, percent);\n  Lift.setVelocity(75.0, percent);\n  Lift.setStopping(hold);\n  direction = 0.0;\n  while (true) {\n    if (Controller.ButtonLUp.pressing()) {\n      waitUntil((!Controller.ButtonLUp.pressing()));\n      if (direction == -1.0 || direction == 1.0) {\n        direction = 0.0;\n      }\n      else {\n        direction = 1.0;\n      }\n    }\n    if (Controller.ButtonLDown.pressing()) {\n      waitUntil((!Controller.ButtonLDown.pressing()));\n      if (direction == -1.0 || direction == 1.0) {\n        direction = 0.0;\n      }\n      else {\n        direction = -1.0;\n      }\n    }\n    if (direction > 0.9) {\n      Pickup.spin(forward);\n    } else if (direction < -0.9) {\n      Pickup.spin(reverse);\n    } else {\n      Pickup.stop();\n    }\n    if (Controller.ButtonRUp.pressing() && LiftBottom.pressing()) {\n      Lift.stop();\n    }\n    if (Controller.ButtonRDown.pressing() || Controller.ButtonRUp.pressing()) {\n      Brain.Timer.reset();\n    }\n    if (Brain.Timer.value() > time_band) {\n      while (!LiftBottom.pressing()) {\n        Lift.spinFor(forward, 30.0, degrees, true);\n      wait(20, msec);\n      }\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}