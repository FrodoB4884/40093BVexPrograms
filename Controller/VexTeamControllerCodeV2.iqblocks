{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"procedures_call\" id=\"J}eBJ/@Umv).3diz7}V:\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"StartTheme\" proceduredefid=\"o?xR0C_w;J3oj^{5k]hX\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_control_forever\" id=\"ix$Ie|g)rBdiQSYU?G)M\"><statement name=\"SUBSTACK\"><block type=\"iq_motion_set_motor_velocity\" id=\"djAMm6|#NB8wBDB(WDNx\"><field name=\"MOTOR\">pickup</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\";i8W|jvfVOX1aspB2/pr\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_control_if_elseif_else\" id=\"j])SLAHB{@qy)2R6~_RQ\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" branches=\"2\"></mutation><value name=\"CONDITION1\"><block type=\"iq_sensing_pressing_controller\" id=\"uy`3b(RK62QwwMb8^,Oe\"><field name=\"BUTTON\">ButtonLUp</field></block></value><statement name=\"SUBSTACK1\"><block type=\"iq_motion_stop_motor\" id=\"7uZ:a[iQUqvZ!DBs)ao9\"><field name=\"MOTOR\">pickup</field><next><block type=\"iq_control_wait_until\" id=\"hYS+EExVvi%[h*x03#f]\"><value name=\"CONDITION\"><block type=\"iq_operator_not\" id=\"*158{Dq_gxC]?jkr*$ys\"><value name=\"OPERAND\"><block type=\"iq_sensing_pressing_controller\" id=\"*xhlak:0t5fZ-0C.?/md\"><field name=\"BUTTON\">ButtonLUp</field></block></value></block></value><next><block type=\"iq_motion_spin\" id=\"h8Sjg{%W#=+p%6d;PhRg\"><field name=\"MOTOR\">pickup</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></statement><value name=\"CONDITION2\"><block type=\"iq_sensing_pressing_controller\" id=\"Ab+hVKiJsg|h;Joxf~:c\"><field name=\"BUTTON\">ButtonLDown</field></block></value><statement name=\"SUBSTACK2\"><block type=\"iq_motion_stop_motor\" id=\"-@5crh@aEnIX|yk%iS1%\"><field name=\"MOTOR\">pickup</field></block></statement><statement name=\"SUBSTACK_ELSE\"><block type=\"iq_other_comment\" id=\"4BUUfv#RgwkgPgTr%}4N\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"yZn:XQ3KkAh|Z;-BmM3F\"><field name=\"comment\"># keep moving or do nothing</field></shadow></value></block></statement></block></next></block></statement></block></next></block></next></block><block type=\"procedures_definition\" id=\"v4Vk{WVQ0-fmDo},gb1I\" x=\"990\" y=\"-10\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"o?xR0C_w;J3oj^{5k]hX\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"StartTheme\" proceduredefid=\"o?xR0C_w;J3oj^{5k]hX\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_other_comment\" id=\"dHId=,kw/nRAVr?$o5mJ\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\":.hWC3XVvaU{3OoBErpk\"><field name=\"comment\">;-)</field></shadow></value><next><block type=\"iq_looks_draw_circle\" id=\"}Y7D~dLSE:SXqDAP@@{t\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"Y59K2g:EQp08G_Oe]W+M\"><field name=\"NUM\">0</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"Z_R7V.[dQ]{DY,AAddNB\"><field name=\"NUM\">20</field></shadow></value><value name=\"RADIUS\"><shadow type=\"math_whole_number\" id=\"23a%rmf6oOiq;+yS6~iu\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_looks_draw_circle\" id=\"kokfs,Ekv[EH2^TQQo},\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"ZciEhpZ%DHH^=8m3=!XY\"><field name=\"NUM\">26</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"X4,7P7.2Q7e2axYVd8KQ\"><field name=\"NUM\">20</field></shadow></value><value name=\"RADIUS\"><shadow type=\"math_whole_number\" id=\"T/U:T8]{e~flT!|Nry1|\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"iq_looks_draw_circle\" id=\"S]y/~6n..xK$tOAN*{A]\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"z={A]JF)o:2qf,^]it}H\"><field name=\"NUM\">13</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"QNG+^WszhbV-c![[nBA(\"><field name=\"NUM\">0</field></shadow></value><value name=\"RADIUS\"><shadow type=\"math_whole_number\" id=\"AB:TcQMA/$gM25[HD$We\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"iq_sounds_play_note\" id=\"kuFO(B=rUBQ0q;+0Y~:9\"><field name=\"NOTE\">2</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"XJm~%4;;SC;EXO[wqLEw\"><field name=\"NOTE\">0</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\")4]85^)jY]}qgTSm#a!#\"><field name=\"NOTE\">4</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"j}(yB1/mtU#L}qmX73Gm\"><field name=\"NOTE\">6</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"kQ339%w}^M];lq^2j]y$\"><field name=\"NOTE\">2</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"{{CFL~]C7+EDLwy_Sd`c\"><field name=\"NOTE\">0</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"i4[A4Xa#}^k=,W$O${T?\"><field name=\"NOTE\">4</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"Y6yQ1WHUWyt:1-D2|2^!\"><field name=\"NOTE\">6</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"m8e`~L/-Y_pG2:36PT:0\"><field name=\"NOTE\">5</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"-wsHMiaw`ox0Elqe[D_b\"><field name=\"NOTE\">4</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"$F?rzi`S,WI`EH}%7Mpw\"><field name=\"NOTE\">3</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"oN2_Y/D6S2D8|EZa6#`R\"><field name=\"NOTE\">2</field><field name=\"DURATION\">1</field><next><block type=\"iq_sounds_play_note\" id=\"5OLH(b86k?|g!o_oTstM\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[6,1,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"250mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"200","unit":"mm","wheelbase":"153","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"lift","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22},{"port":[5],"name":"pickup","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[3,4],"name":"lift","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.1","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT6, 1, false);\nmotor RightDriveSmart = motor(PORT1, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 250, 200, 153, mm, 1);\ncontroller Controller = controller();\nmotor pickup = motor(PORT5, true);\nmotor liftMotorA = motor(PORT3, false);\nmotor liftMotorB = motor(PORT4, true);\nmotor_group lift = motor_group(liftMotorA, liftMotorB);\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool ControllerRightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonRUp/ButtonRDown status to control lift\n      if (Controller.ButtonRUp.pressing()) {\n        lift.spin(forward);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (Controller.ButtonRDown.pressing()) {\n        lift.spin(reverse);\n        ControllerRightShoulderControlMotorsStopped = false;\n      } else if (!ControllerRightShoulderControlMotorsStopped) {\n        lift.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        ControllerRightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_StartTheme();\n\nfloat myVariable;\n\n// User defined function\nvoid myblockfunction_StartTheme() {\n  // ;-)\n  Brain.Screen.drawCircle(0, 20, 10);\n  Brain.Screen.drawCircle(26, 20, 10);\n  Brain.Screen.drawCircle(13, 0, 5);\n  Brain.playNote(3, 2, 250);\n  Brain.playNote(3, 0, 250);\n  Brain.playNote(3, 4, 250);\n  Brain.playNote(3, 6, 250);\n  Brain.playNote(3, 2, 250);\n  Brain.playNote(3, 0, 250);\n  Brain.playNote(3, 4, 250);\n  Brain.playNote(3, 6, 250);\n  Brain.playNote(3, 5, 250);\n  Brain.playNote(3, 4, 250);\n  Brain.playNote(3, 3, 250);\n  Brain.playNote(3, 2, 250);\n  Brain.playNote(3, 0, 1000);\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  myblockfunction_StartTheme();\n  while (true) {\n    pickup.setVelocity(100.0, percent);\n    if (Controller.ButtonLUp.pressing()) {\n      pickup.stop();\n      waitUntil((!Controller.ButtonLUp.pressing()));\n      pickup.spin(forward);\n    } else if (Controller.ButtonLDown.pressing()) {\n      pickup.stop();\n    } else {\n      // # keep moving or do nothing\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}